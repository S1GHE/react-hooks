import { useState } from "react";

/**
 *  Батчинг - автоматическое объединение нескольких обновлений состояния
 *  в один перерендер компонента для повышения производительности
 *
 *  Важная особенность!
 *  Работает внутри синхронных обработчиков событий (onClick, onChange и т.д.)
 *  Не работает в асинхронных операциях (setTimeout, fetch и т.д.)
 *  В React 18+ батчинг работает по умолчанию везде п.и -> <AsyncBatching/>
 */
export const Batching = () => {
  const [count, setCount] = useState(0);
  const [message, setMessage] = useState("");

  const updateState = () => {
    setCount(count + 1);
    setMessage("Значение обновлено");

    // React объединит эти обновления в одну операцию:
    // - Оба состояния обновятся одновременно
    // - Компонент перерендерится только ОДИН раз
    // - Пользователь увидит сразу оба изменения
    // Несмотря на последовательные вызовы, React гарантирует:
    // 1. Оба состояния обновятся атомарно
    // 2. Компонент получит новые значения в следующем рендере
  };

  return (
    <div>
      <p>{count}</p>
      <p>{message}</p>
      <button onClick={updateState}>Обновить</button>
    </div>
  );
};
